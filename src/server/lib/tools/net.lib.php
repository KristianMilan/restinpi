<?php    function http_request($url, $method='GET', $headers=null, $content=null, &$respheaders=null) {        if (empty($method))            $method = 'GET';                /**         * Make post query         */		if (!empty($content) && is_array($content))			$content = http_build_query($content);         		$curl = curl_init();                /**         * Set headers         */        		if (!empty($headers)) {		    if (!is_array($headers))		        $headers = explode("\n", $headers);		    					curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);					}            		curl_setopt($curl, CURLOPT_URL, $url);		curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);		curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);		curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);     		curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); 		curl_setopt($curl, CURLOPT_CUSTOMREQUEST, $method);		curl_setopt($curl, CURLOPT_POSTFIELDS, $content);        //curl_setopt($curl, CURLINFO_HEADER_OUT, true);        curl_setopt($curl, CURLOPT_VERBOSE, 1);        curl_setopt($curl, CURLOPT_HEADER, 1);                $data = curl_exec($curl);                /**         * get headers and body         */        $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE);        $respheaders = substr($data, 0, $header_size);        $body = substr($data, $header_size);        		curl_close($curl);        		return $body;	}		function http_proxy_query($url) {	    $respheaders = null;    	    	    $data = http_request($url, $_SERVER['REQUEST_METHOD'], getallheaders(), $_POST, $respheaders);	    	    /**	     * Send response headers to browser	     */	    headers($respheaders, true/*, function($h) {	    	return stripos($h, 'cookie:') !== false;	    }*/);	    	    return $data;	}		/**	 * Apply multiple headers	 */	function headers($headers, $replace=true, $matchers=null) {		static $ignores = array('Transfer-Encoding', 'Location');			    if (!is_array($headers))	        $headers = explode("\n", $headers);	        	    foreach($headers as $h){	    	if (empty($h)) continue;	    	if (is_callable($matchers) && !$matchers($h)) continue;									$parts = explode(':', $h, 2);						if (count($parts) >= 2) {				list($name, $value) = $parts;								if (in_array($name, $ignores)) continue;								if ($name == 'Set-Cookie') {					$cookiepart = explode(';', $value);					$cookiepart = explode('=', $cookiepart[0]);										setcookie(trim($cookiepart[0]), trim($cookiepart[1]), time()+60*60*24*30, '/');					continue;				}								}						header($h, $replace);	        	    }	}        function url_exists($url) {        $headers = @get_headers($url);        $http = explode(' ', $headers[0]);                if (count($http) < 2)            return false;                   $http = $http[1];        return $http != 404 && $http < 500;    }        function full_url() {        return 'http://' . $_SERVER['SERVER_NAME'] .':'. $_SERVER['SERVER_PORT'] . $_SERVER['REQUEST_URI'];    }