<?phpnamespace rpi\core;class Config extends Settings {    private static $modules = array();    private $name;    private $config;    private $modified = false;        public static function load($module) {        if (!array_key_exists($module, self::$modules))            self::$modules[$module] = new Config($module);            return self::$modules[$module];    }        public static function modules() {        return self::$modules;    }    public function __construct($module) {        parent::__construct(CONFIG_DIR.'/'. $module .'.json');        $this->name = $module;        $this->config = $this->read();    }    public function __destruct() {        $this->save();    }    public function __get($name) {        if (property_exists($this->config, $name))            return $this->config->$name;                return null;    }    public function __set($name, $value) {        if (property_exists($this->config, $name) && $this->config->$name == $value)                return;               $this->config->$name = $value;            $this->modified = true;        }          public function __isset($name) {        return property_exists($this->config, $name);    }    public function save($force=false) {            if (!$force && !$this->modified) return;        $this->write($this->config);    }    public function config() {        return $this->config;    }    public function has($name) {        return property_exists($this->config, $name);    }}